// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: pool_api.proto

package poolAPIProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayoutMode int32

const (
	PayoutMode_PPLNS PayoutMode = 0
	PayoutMode_PROP  PayoutMode = 1
)

// Enum value maps for PayoutMode.
var (
	PayoutMode_name = map[int32]string{
		0: "PPLNS",
		1: "PROP",
	}
	PayoutMode_value = map[string]int32{
		"PPLNS": 0,
		"PROP":  1,
	}
)

func (x PayoutMode) Enum() *PayoutMode {
	p := new(PayoutMode)
	*p = x
	return p
}

func (x PayoutMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayoutMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pool_api_proto_enumTypes[0].Descriptor()
}

func (PayoutMode) Type() protoreflect.EnumType {
	return &file_pool_api_proto_enumTypes[0]
}

func (x PayoutMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayoutMode.Descriptor instead.
func (PayoutMode) EnumDescriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{0}
}

type PayoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayoutInterval int32   `protobuf:"varint,1,opt,name=payout_interval,json=payoutInterval,proto3" json:"payout_interval,omitempty"`
	MinPayout      *uint64 `protobuf:"varint,2,opt,name=min_payout,json=minPayout,proto3,oneof" json:"min_payout,omitempty"`
	MaxPayout      *uint64 `protobuf:"varint,3,opt,name=max_payout,json=maxPayout,proto3,oneof" json:"max_payout,omitempty"`
}

func (x *PayoutInfo) Reset() {
	*x = PayoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutInfo) ProtoMessage() {}

func (x *PayoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutInfo.ProtoReflect.Descriptor instead.
func (*PayoutInfo) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{0}
}

func (x *PayoutInfo) GetPayoutInterval() int32 {
	if x != nil {
		return x.PayoutInterval
	}
	return 0
}

func (x *PayoutInfo) GetMinPayout() uint64 {
	if x != nil && x.MinPayout != nil {
		return *x.MinPayout
	}
	return 0
}

func (x *PayoutInfo) GetMaxPayout() uint64 {
	if x != nil && x.MaxPayout != nil {
		return *x.MaxPayout
	}
	return 0
}

type PoolFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fee     float32  `protobuf:"fixed32,1,opt,name=fee,proto3" json:"fee,omitempty"`
	SoloFee *float32 `protobuf:"fixed32,2,opt,name=solo_fee,json=soloFee,proto3,oneof" json:"solo_fee,omitempty"`
}

func (x *PoolFee) Reset() {
	*x = PoolFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolFee) ProtoMessage() {}

func (x *PoolFee) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolFee.ProtoReflect.Descriptor instead.
func (*PoolFee) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{1}
}

func (x *PoolFee) GetFee() float32 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *PoolFee) GetSoloFee() float32 {
	if x != nil && x.SoloFee != nil {
		return *x.SoloFee
	}
	return 0
}

type PoolSlave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region      string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	TcpPort     int32                  `protobuf:"varint,2,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	SslPort     int32                  `protobuf:"varint,3,opt,name=ssl_port,json=sslPort,proto3" json:"ssl_port,omitempty"`
	SoloPort    *int32                 `protobuf:"varint,4,opt,name=solo_port,json=soloPort,proto3,oneof" json:"solo_port,omitempty"`
	ConnectedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
}

func (x *PoolSlave) Reset() {
	*x = PoolSlave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolSlave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSlave) ProtoMessage() {}

func (x *PoolSlave) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSlave.ProtoReflect.Descriptor instead.
func (*PoolSlave) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{2}
}

func (x *PoolSlave) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *PoolSlave) GetTcpPort() int32 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *PoolSlave) GetSslPort() int32 {
	if x != nil {
		return x.SslPort
	}
	return 0
}

func (x *PoolSlave) GetSoloPort() int32 {
	if x != nil && x.SoloPort != nil {
		return *x.SoloPort
	}
	return 0
}

func (x *PoolSlave) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

type PoolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockchain string      `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Algos      []string    `protobuf:"bytes,2,rep,name=algos,proto3" json:"algos,omitempty"`
	PayoutMode PayoutMode  `protobuf:"varint,3,opt,name=payout_mode,json=payoutMode,proto3,enum=poolAPI.PayoutMode" json:"payout_mode,omitempty"`
	Solo       bool        `protobuf:"varint,4,opt,name=solo,proto3" json:"solo,omitempty"`
	Fee        *PoolFee    `protobuf:"bytes,5,opt,name=fee,proto3" json:"fee,omitempty"`
	PayoutInfo *PayoutInfo `protobuf:"bytes,6,opt,name=payout_info,json=payoutInfo,proto3" json:"payout_info,omitempty"`
	Agents     []string    `protobuf:"bytes,7,rep,name=agents,proto3" json:"agents,omitempty"`
}

func (x *PoolInfo) Reset() {
	*x = PoolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolInfo) ProtoMessage() {}

func (x *PoolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolInfo.ProtoReflect.Descriptor instead.
func (*PoolInfo) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{3}
}

func (x *PoolInfo) GetBlockchain() string {
	if x != nil {
		return x.Blockchain
	}
	return ""
}

func (x *PoolInfo) GetAlgos() []string {
	if x != nil {
		return x.Algos
	}
	return nil
}

func (x *PoolInfo) GetPayoutMode() PayoutMode {
	if x != nil {
		return x.PayoutMode
	}
	return PayoutMode_PPLNS
}

func (x *PoolInfo) GetSolo() bool {
	if x != nil {
		return x.Solo
	}
	return false
}

func (x *PoolInfo) GetFee() *PoolFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *PoolInfo) GetPayoutInfo() *PayoutInfo {
	if x != nil {
		return x.PayoutInfo
	}
	return nil
}

func (x *PoolInfo) GetAgents() []string {
	if x != nil {
		return x.Agents
	}
	return nil
}

type PoolSlaves struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slaves []*PoolSlave `protobuf:"bytes,1,rep,name=slaves,proto3" json:"slaves,omitempty"`
}

func (x *PoolSlaves) Reset() {
	*x = PoolSlaves{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolSlaves) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolSlaves) ProtoMessage() {}

func (x *PoolSlaves) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolSlaves.ProtoReflect.Descriptor instead.
func (*PoolSlaves) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{4}
}

func (x *PoolSlaves) GetSlaves() []*PoolSlave {
	if x != nil {
		return x.Slaves
	}
	return nil
}

type PoolStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinersCount         int32   `protobuf:"varint,1,opt,name=miners_count,json=minersCount,proto3" json:"miners_count,omitempty"`
	SoloMinersCount     int32   `protobuf:"varint,2,opt,name=solo_miners_count,json=soloMinersCount,proto3" json:"solo_miners_count,omitempty"`
	Hashrate            []byte  `protobuf:"bytes,3,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	AvgHashrate         []byte  `protobuf:"bytes,4,opt,name=avg_hashrate,json=avgHashrate,proto3" json:"avg_hashrate,omitempty"`
	SoloHashrate        []byte  `protobuf:"bytes,5,opt,name=solo_hashrate,json=soloHashrate,proto3,oneof" json:"solo_hashrate,omitempty"`
	SoloAvgHashrate     []byte  `protobuf:"bytes,6,opt,name=solo_avg_hashrate,json=soloAvgHashrate,proto3,oneof" json:"solo_avg_hashrate,omitempty"`
	ShareDifficulty     uint64  `protobuf:"varint,7,opt,name=share_difficulty,json=shareDifficulty,proto3" json:"share_difficulty,omitempty"`
	SoloShareDifficulty *uint64 `protobuf:"varint,8,opt,name=solo_share_difficulty,json=soloShareDifficulty,proto3,oneof" json:"solo_share_difficulty,omitempty"`
}

func (x *PoolStats) Reset() {
	*x = PoolStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolStats) ProtoMessage() {}

func (x *PoolStats) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolStats.ProtoReflect.Descriptor instead.
func (*PoolStats) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{5}
}

func (x *PoolStats) GetMinersCount() int32 {
	if x != nil {
		return x.MinersCount
	}
	return 0
}

func (x *PoolStats) GetSoloMinersCount() int32 {
	if x != nil {
		return x.SoloMinersCount
	}
	return 0
}

func (x *PoolStats) GetHashrate() []byte {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *PoolStats) GetAvgHashrate() []byte {
	if x != nil {
		return x.AvgHashrate
	}
	return nil
}

func (x *PoolStats) GetSoloHashrate() []byte {
	if x != nil {
		return x.SoloHashrate
	}
	return nil
}

func (x *PoolStats) GetSoloAvgHashrate() []byte {
	if x != nil {
		return x.SoloAvgHashrate
	}
	return nil
}

func (x *PoolStats) GetShareDifficulty() uint64 {
	if x != nil {
		return x.ShareDifficulty
	}
	return 0
}

func (x *PoolStats) GetSoloShareDifficulty() uint64 {
	if x != nil && x.SoloShareDifficulty != nil {
		return *x.SoloShareDifficulty
	}
	return 0
}

type MinerAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MinerAddressRequest) Reset() {
	*x = MinerAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerAddressRequest) ProtoMessage() {}

func (x *MinerAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerAddressRequest.ProtoReflect.Descriptor instead.
func (*MinerAddressRequest) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{6}
}

func (x *MinerAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MinerAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *MinerAddressesRequest) Reset() {
	*x = MinerAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerAddressesRequest) ProtoMessage() {}

func (x *MinerAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerAddressesRequest.ProtoReflect.Descriptor instead.
func (*MinerAddressesRequest) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{7}
}

func (x *MinerAddressesRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ValidateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *ValidateAddressResponse) Reset() {
	*x = ValidateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAddressResponse) ProtoMessage() {}

func (x *ValidateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAddressResponse.ProtoReflect.Descriptor instead.
func (*ValidateAddressResponse) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{8}
}

func (x *ValidateAddressResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type MinerWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker      string                 `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
	SlaveRegion string                 `protobuf:"bytes,2,opt,name=slave_region,json=slaveRegion,proto3" json:"slave_region,omitempty"`
	Solo        bool                   `protobuf:"varint,3,opt,name=solo,proto3" json:"solo,omitempty"`
	Hashrate    []byte                 `protobuf:"bytes,4,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	ConnectedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
}

func (x *MinerWorker) Reset() {
	*x = MinerWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerWorker) ProtoMessage() {}

func (x *MinerWorker) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerWorker.ProtoReflect.Descriptor instead.
func (*MinerWorker) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{9}
}

func (x *MinerWorker) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *MinerWorker) GetSlaveRegion() string {
	if x != nil {
		return x.SlaveRegion
	}
	return ""
}

func (x *MinerWorker) GetSolo() bool {
	if x != nil {
		return x.Solo
	}
	return false
}

func (x *MinerWorker) GetHashrate() []byte {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *MinerWorker) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

type MinerWorkers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers []*MinerWorker `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
}

func (x *MinerWorkers) Reset() {
	*x = MinerWorkers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerWorkers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerWorkers) ProtoMessage() {}

func (x *MinerWorkers) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerWorkers.ProtoReflect.Descriptor instead.
func (*MinerWorkers) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{10}
}

func (x *MinerWorkers) GetWorkers() []*MinerWorker {
	if x != nil {
		return x.Workers
	}
	return nil
}

type MinersWorkers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers map[string]*MinerWorkers `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MinersWorkers) Reset() {
	*x = MinersWorkers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersWorkers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersWorkers) ProtoMessage() {}

func (x *MinersWorkers) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersWorkers.ProtoReflect.Descriptor instead.
func (*MinersWorkers) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{11}
}

func (x *MinersWorkers) GetWorkers() map[string]*MinerWorkers {
	if x != nil {
		return x.Workers
	}
	return nil
}

type MinerBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *MinerBalance) Reset() {
	*x = MinerBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerBalance) ProtoMessage() {}

func (x *MinerBalance) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerBalance.ProtoReflect.Descriptor instead.
func (*MinerBalance) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{12}
}

func (x *MinerBalance) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type MinersBalances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances map[string]*MinerBalance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MinersBalances) Reset() {
	*x = MinersBalances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersBalances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersBalances) ProtoMessage() {}

func (x *MinersBalances) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersBalances.ProtoReflect.Descriptor instead.
func (*MinersBalances) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{13}
}

func (x *MinersBalances) GetBalances() map[string]*MinerBalance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type MinerPayoutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address  string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PaidFrom *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=paid_from,json=paidFrom,proto3" json:"paid_from,omitempty"`
}

func (x *MinerPayoutsRequest) Reset() {
	*x = MinerPayoutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerPayoutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerPayoutsRequest) ProtoMessage() {}

func (x *MinerPayoutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerPayoutsRequest.ProtoReflect.Descriptor instead.
func (*MinerPayoutsRequest) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{14}
}

func (x *MinerPayoutsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MinerPayoutsRequest) GetPaidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.PaidFrom
	}
	return nil
}

type MinersPayoutsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	PaidFrom  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=paid_from,json=paidFrom,proto3" json:"paid_from,omitempty"`
}

func (x *MinersPayoutsRequest) Reset() {
	*x = MinersPayoutsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersPayoutsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersPayoutsRequest) ProtoMessage() {}

func (x *MinersPayoutsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersPayoutsRequest.ProtoReflect.Descriptor instead.
func (*MinersPayoutsRequest) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{15}
}

func (x *MinersPayoutsRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *MinersPayoutsRequest) GetPaidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.PaidFrom
	}
	return nil
}

type MinerPayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string                 `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Amount uint64                 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PaidAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
}

func (x *MinerPayout) Reset() {
	*x = MinerPayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerPayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerPayout) ProtoMessage() {}

func (x *MinerPayout) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerPayout.ProtoReflect.Descriptor instead.
func (*MinerPayout) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{16}
}

func (x *MinerPayout) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *MinerPayout) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MinerPayout) GetPaidAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PaidAt
	}
	return nil
}

type MinerPayouts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payouts []*MinerPayout `protobuf:"bytes,1,rep,name=payouts,proto3" json:"payouts,omitempty"`
}

func (x *MinerPayouts) Reset() {
	*x = MinerPayouts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerPayouts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerPayouts) ProtoMessage() {}

func (x *MinerPayouts) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerPayouts.ProtoReflect.Descriptor instead.
func (*MinerPayouts) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{17}
}

func (x *MinerPayouts) GetPayouts() []*MinerPayout {
	if x != nil {
		return x.Payouts
	}
	return nil
}

type MinersPayouts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payouts map[string]*MinerPayout `protobuf:"bytes,1,rep,name=payouts,proto3" json:"payouts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MinersPayouts) Reset() {
	*x = MinersPayouts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersPayouts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersPayouts) ProtoMessage() {}

func (x *MinersPayouts) ProtoReflect() protoreflect.Message {
	mi := &file_pool_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersPayouts.ProtoReflect.Descriptor instead.
func (*MinersPayouts) Descriptor() ([]byte, []int) {
	return file_pool_api_proto_rawDescGZIP(), []int{18}
}

func (x *MinersPayouts) GetPayouts() map[string]*MinerPayout {
	if x != nil {
		return x.Payouts
	}
	return nil
}

var File_pool_api_proto protoreflect.FileDescriptor

var file_pool_api_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12,
	0x22, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x69, 0x6e, 0x5f,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0x48, 0x0a, 0x07, 0x50, 0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x66,
	0x65, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x07, 0x73, 0x6f, 0x6c, 0x6f, 0x46, 0x65, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x66, 0x65, 0x65, 0x22,
	0xc8, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x73, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x73, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x73,
	0x6f, 0x6c, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x6f, 0x6c, 0x6f, 0x50, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x08, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x67, 0x6f, 0x73, 0x12, 0x34, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x6f, 0x12, 0x22, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x50,
	0x6f, 0x6f, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x6f, 0x6f,
	0x6c, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50,
	0x49, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x06, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x73, 0x22, 0x9a, 0x03, 0x0a, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x6f, 0x6c, 0x6f, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x76, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x61, 0x76, 0x67, 0x48, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x0d, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6f, 0x6c, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x73, 0x6f, 0x6c,
	0x6f, 0x5f, 0x61, 0x76, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0f, 0x73, 0x6f, 0x6c, 0x6f, 0x41, 0x76, 0x67, 0x48,
	0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x15, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x13, 0x73, 0x6f, 0x6c, 0x6f, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x88, 0x01, 0x01, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x61, 0x76, 0x67, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x22, 0x2f, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x35, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x17, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x0b, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49,
	0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x1a, 0x51, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49,
	0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x52, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a, 0x13, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x09,
	0x70, 0x61, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x61, 0x69,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x6d, 0x0a, 0x14, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x50,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x70,
	0x61, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x70, 0x61, 0x69, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x22, 0x73, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x0c, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0d, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x1a, 0x50, 0x0a, 0x0c, 0x50, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x21, 0x0a, 0x0a,
	0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x50,
	0x4c, 0x4e, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x52, 0x4f, 0x50, 0x10, 0x01, 0x32,
	0xc1, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x6f,
	0x6c, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x12, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x32, 0xf4, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6f, 0x6f,
	0x6c, 0x41, 0x50, 0x49, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12,
	0x1c, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x32, 0xb7, 0x02, 0x0a, 0x12, 0x50,
	0x6f, 0x6f, 0x6c, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41,
	0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41,
	0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x49, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x2e,
	0x70, 0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x41, 0x50, 0x49, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f,
	0x6f, 0x6c, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x6f, 0x6f, 0x6c, 0x41,
	0x50, 0x49, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pool_api_proto_rawDescOnce sync.Once
	file_pool_api_proto_rawDescData = file_pool_api_proto_rawDesc
)

func file_pool_api_proto_rawDescGZIP() []byte {
	file_pool_api_proto_rawDescOnce.Do(func() {
		file_pool_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pool_api_proto_rawDescData)
	})
	return file_pool_api_proto_rawDescData
}

var file_pool_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pool_api_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pool_api_proto_goTypes = []interface{}{
	(PayoutMode)(0),                 // 0: poolAPI.PayoutMode
	(*PayoutInfo)(nil),              // 1: poolAPI.PayoutInfo
	(*PoolFee)(nil),                 // 2: poolAPI.PoolFee
	(*PoolSlave)(nil),               // 3: poolAPI.PoolSlave
	(*PoolInfo)(nil),                // 4: poolAPI.PoolInfo
	(*PoolSlaves)(nil),              // 5: poolAPI.PoolSlaves
	(*PoolStats)(nil),               // 6: poolAPI.PoolStats
	(*MinerAddressRequest)(nil),     // 7: poolAPI.MinerAddressRequest
	(*MinerAddressesRequest)(nil),   // 8: poolAPI.MinerAddressesRequest
	(*ValidateAddressResponse)(nil), // 9: poolAPI.ValidateAddressResponse
	(*MinerWorker)(nil),             // 10: poolAPI.MinerWorker
	(*MinerWorkers)(nil),            // 11: poolAPI.MinerWorkers
	(*MinersWorkers)(nil),           // 12: poolAPI.MinersWorkers
	(*MinerBalance)(nil),            // 13: poolAPI.MinerBalance
	(*MinersBalances)(nil),          // 14: poolAPI.MinersBalances
	(*MinerPayoutsRequest)(nil),     // 15: poolAPI.MinerPayoutsRequest
	(*MinersPayoutsRequest)(nil),    // 16: poolAPI.MinersPayoutsRequest
	(*MinerPayout)(nil),             // 17: poolAPI.MinerPayout
	(*MinerPayouts)(nil),            // 18: poolAPI.MinerPayouts
	(*MinersPayouts)(nil),           // 19: poolAPI.MinersPayouts
	nil,                             // 20: poolAPI.MinersWorkers.WorkersEntry
	nil,                             // 21: poolAPI.MinersBalances.BalancesEntry
	nil,                             // 22: poolAPI.MinersPayouts.PayoutsEntry
	(*timestamppb.Timestamp)(nil),   // 23: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),           // 24: google.protobuf.Empty
}
var file_pool_api_proto_depIdxs = []int32{
	23, // 0: poolAPI.PoolSlave.connected_at:type_name -> google.protobuf.Timestamp
	0,  // 1: poolAPI.PoolInfo.payout_mode:type_name -> poolAPI.PayoutMode
	2,  // 2: poolAPI.PoolInfo.fee:type_name -> poolAPI.PoolFee
	1,  // 3: poolAPI.PoolInfo.payout_info:type_name -> poolAPI.PayoutInfo
	3,  // 4: poolAPI.PoolSlaves.slaves:type_name -> poolAPI.PoolSlave
	23, // 5: poolAPI.MinerWorker.connected_at:type_name -> google.protobuf.Timestamp
	10, // 6: poolAPI.MinerWorkers.workers:type_name -> poolAPI.MinerWorker
	20, // 7: poolAPI.MinersWorkers.workers:type_name -> poolAPI.MinersWorkers.WorkersEntry
	21, // 8: poolAPI.MinersBalances.balances:type_name -> poolAPI.MinersBalances.BalancesEntry
	23, // 9: poolAPI.MinerPayoutsRequest.paid_from:type_name -> google.protobuf.Timestamp
	23, // 10: poolAPI.MinersPayoutsRequest.paid_from:type_name -> google.protobuf.Timestamp
	23, // 11: poolAPI.MinerPayout.paid_at:type_name -> google.protobuf.Timestamp
	17, // 12: poolAPI.MinerPayouts.payouts:type_name -> poolAPI.MinerPayout
	22, // 13: poolAPI.MinersPayouts.payouts:type_name -> poolAPI.MinersPayouts.PayoutsEntry
	11, // 14: poolAPI.MinersWorkers.WorkersEntry.value:type_name -> poolAPI.MinerWorkers
	13, // 15: poolAPI.MinersBalances.BalancesEntry.value:type_name -> poolAPI.MinerBalance
	17, // 16: poolAPI.MinersPayouts.PayoutsEntry.value:type_name -> poolAPI.MinerPayout
	24, // 17: poolAPI.PoolService.GetPoolInfo:input_type -> google.protobuf.Empty
	24, // 18: poolAPI.PoolService.GetPoolSlaves:input_type -> google.protobuf.Empty
	24, // 19: poolAPI.PoolService.GetPoolStats:input_type -> google.protobuf.Empty
	7,  // 20: poolAPI.PoolMinersService.ValidateAddress:input_type -> poolAPI.MinerAddressRequest
	7,  // 21: poolAPI.PoolMinersService.GetMinerWorkers:input_type -> poolAPI.MinerAddressRequest
	8,  // 22: poolAPI.PoolMinersService.GetWorkers:input_type -> poolAPI.MinerAddressesRequest
	7,  // 23: poolAPI.PoolPayoutsService.GetMinerBalance:input_type -> poolAPI.MinerAddressRequest
	8,  // 24: poolAPI.PoolPayoutsService.GetBalances:input_type -> poolAPI.MinerAddressesRequest
	15, // 25: poolAPI.PoolPayoutsService.GetMinerPayouts:input_type -> poolAPI.MinerPayoutsRequest
	16, // 26: poolAPI.PoolPayoutsService.GetMinersPayouts:input_type -> poolAPI.MinersPayoutsRequest
	4,  // 27: poolAPI.PoolService.GetPoolInfo:output_type -> poolAPI.PoolInfo
	5,  // 28: poolAPI.PoolService.GetPoolSlaves:output_type -> poolAPI.PoolSlaves
	6,  // 29: poolAPI.PoolService.GetPoolStats:output_type -> poolAPI.PoolStats
	9,  // 30: poolAPI.PoolMinersService.ValidateAddress:output_type -> poolAPI.ValidateAddressResponse
	11, // 31: poolAPI.PoolMinersService.GetMinerWorkers:output_type -> poolAPI.MinerWorkers
	12, // 32: poolAPI.PoolMinersService.GetWorkers:output_type -> poolAPI.MinersWorkers
	13, // 33: poolAPI.PoolPayoutsService.GetMinerBalance:output_type -> poolAPI.MinerBalance
	14, // 34: poolAPI.PoolPayoutsService.GetBalances:output_type -> poolAPI.MinersBalances
	18, // 35: poolAPI.PoolPayoutsService.GetMinerPayouts:output_type -> poolAPI.MinerPayouts
	19, // 36: poolAPI.PoolPayoutsService.GetMinersPayouts:output_type -> poolAPI.MinersPayouts
	27, // [27:37] is the sub-list for method output_type
	17, // [17:27] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pool_api_proto_init() }
func file_pool_api_proto_init() {
	if File_pool_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pool_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolSlave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolSlaves); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerWorkers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersWorkers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersBalances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerPayoutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersPayoutsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerPayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerPayouts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersPayouts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pool_api_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_pool_api_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_pool_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_pool_api_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pool_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_pool_api_proto_goTypes,
		DependencyIndexes: file_pool_api_proto_depIdxs,
		EnumInfos:         file_pool_api_proto_enumTypes,
		MessageInfos:      file_pool_api_proto_msgTypes,
	}.Build()
	File_pool_api_proto = out.File
	file_pool_api_proto_rawDesc = nil
	file_pool_api_proto_goTypes = nil
	file_pool_api_proto_depIdxs = nil
}
