// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: pool_miners.proto

package poolMinersProto

import (
	filters "github.com/grandminingpool/pool-api-proto/generated/utils/filters"
	pagination "github.com/grandminingpool/pool-api-proto/generated/utils/pagination"
	sorts "github.com/grandminingpool/pool-api-proto/generated/utils/sorts"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MinerAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *MinerAddressRequest) Reset() {
	*x = MinerAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerAddressRequest) ProtoMessage() {}

func (x *MinerAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerAddressRequest.ProtoReflect.Descriptor instead.
func (*MinerAddressRequest) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{0}
}

func (x *MinerAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type MinerAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *MinerAddressesRequest) Reset() {
	*x = MinerAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerAddressesRequest) ProtoMessage() {}

func (x *MinerAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerAddressesRequest.ProtoReflect.Descriptor instead.
func (*MinerAddressesRequest) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{1}
}

func (x *MinerAddressesRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ValidateAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *ValidateAddressResponse) Reset() {
	*x = ValidateAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAddressResponse) ProtoMessage() {}

func (x *ValidateAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAddressResponse.ProtoReflect.Descriptor instead.
func (*ValidateAddressResponse) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateAddressResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type MinersFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         *string                      `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Hashrate        *filters.BigIntRangeFilter   `protobuf:"bytes,2,opt,name=hashrate,proto3,oneof" json:"hashrate,omitempty"`
	WorkersCount    *filters.UInt32Filter        `protobuf:"bytes,3,opt,name=workers_count,json=workersCount,proto3,oneof" json:"workers_count,omitempty"`
	BlocksCount     *filters.UInt32Filter        `protobuf:"bytes,4,opt,name=blocks_count,json=blocksCount,proto3,oneof" json:"blocks_count,omitempty"`
	SoloBlocksCount *filters.UInt32Filter        `protobuf:"bytes,5,opt,name=solo_blocks_count,json=soloBlocksCount,proto3,oneof" json:"solo_blocks_count,omitempty"`
	JoinedAt        *filters.DateTimeRangeFilter `protobuf:"bytes,6,opt,name=joined_at,json=joinedAt,proto3,oneof" json:"joined_at,omitempty"`
}

func (x *MinersFilters) Reset() {
	*x = MinersFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersFilters) ProtoMessage() {}

func (x *MinersFilters) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersFilters.ProtoReflect.Descriptor instead.
func (*MinersFilters) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{3}
}

func (x *MinersFilters) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *MinersFilters) GetHashrate() *filters.BigIntRangeFilter {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *MinersFilters) GetWorkersCount() *filters.UInt32Filter {
	if x != nil {
		return x.WorkersCount
	}
	return nil
}

func (x *MinersFilters) GetBlocksCount() *filters.UInt32Filter {
	if x != nil {
		return x.BlocksCount
	}
	return nil
}

func (x *MinersFilters) GetSoloBlocksCount() *filters.UInt32Filter {
	if x != nil {
		return x.SoloBlocksCount
	}
	return nil
}

func (x *MinersFilters) GetJoinedAt() *filters.DateTimeRangeFilter {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

type MinersSorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         *sorts.SortOrder `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
	Hashrate        *sorts.SortOrder `protobuf:"bytes,2,opt,name=hashrate,proto3,oneof" json:"hashrate,omitempty"`
	WorkersCount    *sorts.SortOrder `protobuf:"bytes,3,opt,name=workers_count,json=workersCount,proto3,oneof" json:"workers_count,omitempty"`
	BlocksCount     *sorts.SortOrder `protobuf:"bytes,4,opt,name=blocks_count,json=blocksCount,proto3,oneof" json:"blocks_count,omitempty"`
	SoloBlocksCount *sorts.SortOrder `protobuf:"bytes,5,opt,name=solo_blocks_count,json=soloBlocksCount,proto3,oneof" json:"solo_blocks_count,omitempty"`
	JoinedAt        *sorts.SortOrder `protobuf:"bytes,6,opt,name=joined_at,json=joinedAt,proto3,oneof" json:"joined_at,omitempty"`
}

func (x *MinersSorts) Reset() {
	*x = MinersSorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersSorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersSorts) ProtoMessage() {}

func (x *MinersSorts) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersSorts.ProtoReflect.Descriptor instead.
func (*MinersSorts) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{4}
}

func (x *MinersSorts) GetAddress() *sorts.SortOrder {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *MinersSorts) GetHashrate() *sorts.SortOrder {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *MinersSorts) GetWorkersCount() *sorts.SortOrder {
	if x != nil {
		return x.WorkersCount
	}
	return nil
}

func (x *MinersSorts) GetBlocksCount() *sorts.SortOrder {
	if x != nil {
		return x.BlocksCount
	}
	return nil
}

func (x *MinersSorts) GetSoloBlocksCount() *sorts.SortOrder {
	if x != nil {
		return x.SoloBlocksCount
	}
	return nil
}

func (x *MinersSorts) GetJoinedAt() *sorts.SortOrder {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

type GetMinersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters    *MinersFilters                `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
	Sorts      *MinersSorts                  `protobuf:"bytes,2,opt,name=sorts,proto3" json:"sorts,omitempty"`
	Pagination *pagination.PaginationRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetMinersRequest) Reset() {
	*x = GetMinersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinersRequest) ProtoMessage() {}

func (x *GetMinersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinersRequest.ProtoReflect.Descriptor instead.
func (*GetMinersRequest) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{5}
}

func (x *GetMinersRequest) GetFilters() *MinersFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetMinersRequest) GetSorts() *MinersSorts {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *GetMinersRequest) GetPagination() *pagination.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Miner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Hashrate        []byte                 `protobuf:"bytes,2,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	WorkersCount    uint32                 `protobuf:"varint,3,opt,name=workers_count,json=workersCount,proto3" json:"workers_count,omitempty"`
	BlocksCount     uint32                 `protobuf:"varint,4,opt,name=blocks_count,json=blocksCount,proto3" json:"blocks_count,omitempty"`
	SoloBlocksCount uint32                 `protobuf:"varint,5,opt,name=solo_blocks_count,json=soloBlocksCount,proto3" json:"solo_blocks_count,omitempty"`
	JoinedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	LastActivity    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
}

func (x *Miner) Reset() {
	*x = Miner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Miner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Miner) ProtoMessage() {}

func (x *Miner) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Miner.ProtoReflect.Descriptor instead.
func (*Miner) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{6}
}

func (x *Miner) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Miner) GetHashrate() []byte {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *Miner) GetWorkersCount() uint32 {
	if x != nil {
		return x.WorkersCount
	}
	return 0
}

func (x *Miner) GetBlocksCount() uint32 {
	if x != nil {
		return x.BlocksCount
	}
	return 0
}

func (x *Miner) GetSoloBlocksCount() uint32 {
	if x != nil {
		return x.SoloBlocksCount
	}
	return 0
}

func (x *Miner) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *Miner) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

type MinersList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miners     []*Miner                       `protobuf:"bytes,1,rep,name=miners,proto3" json:"miners,omitempty"`
	Pagination *pagination.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MinersList) Reset() {
	*x = MinersList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersList) ProtoMessage() {}

func (x *MinersList) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersList.ProtoReflect.Descriptor instead.
func (*MinersList) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{7}
}

func (x *MinersList) GetMiners() []*Miner {
	if x != nil {
		return x.Miners
	}
	return nil
}

func (x *MinersList) GetPagination() *pagination.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MinerWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker      string                 `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
	Region      string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Agent       string                 `protobuf:"bytes,3,opt,name=agent,proto3" json:"agent,omitempty"`
	Solo        bool                   `protobuf:"varint,4,opt,name=solo,proto3" json:"solo,omitempty"`
	Hashrate    []byte                 `protobuf:"bytes,5,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	ConnectedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
}

func (x *MinerWorker) Reset() {
	*x = MinerWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerWorker) ProtoMessage() {}

func (x *MinerWorker) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerWorker.ProtoReflect.Descriptor instead.
func (*MinerWorker) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{8}
}

func (x *MinerWorker) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *MinerWorker) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MinerWorker) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *MinerWorker) GetSolo() bool {
	if x != nil {
		return x.Solo
	}
	return false
}

func (x *MinerWorker) GetHashrate() []byte {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *MinerWorker) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

type MinerWorkers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers []*MinerWorker `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
}

func (x *MinerWorkers) Reset() {
	*x = MinerWorkers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerWorkers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerWorkers) ProtoMessage() {}

func (x *MinerWorkers) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerWorkers.ProtoReflect.Descriptor instead.
func (*MinerWorkers) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{9}
}

func (x *MinerWorkers) GetWorkers() []*MinerWorker {
	if x != nil {
		return x.Workers
	}
	return nil
}

type MinersWorkersMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers map[string]*MinerWorkers `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MinersWorkersMap) Reset() {
	*x = MinersWorkersMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pool_miners_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinersWorkersMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinersWorkersMap) ProtoMessage() {}

func (x *MinersWorkersMap) ProtoReflect() protoreflect.Message {
	mi := &file_pool_miners_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinersWorkersMap.ProtoReflect.Descriptor instead.
func (*MinersWorkersMap) Descriptor() ([]byte, []int) {
	return file_pool_miners_proto_rawDescGZIP(), []int{10}
}

func (x *MinersWorkersMap) GetWorkers() map[string]*MinerWorkers {
	if x != nil {
		return x.Workers
	}
	return nil
}

var File_pool_miners_proto protoreflect.FileDescriptor

var file_pool_miners_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2f, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x75, 0x74,
	0x69, 0x6c, 0x73, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2f, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x35, 0x0a, 0x15, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x17, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0xd3, 0x03, 0x0a, 0x0d, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x42, 0x69, 0x67, 0x49, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x01, 0x52, 0x08, 0x68, 0x61, 0x73,
	0x68, 0x72, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x02, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x11, 0x73, 0x6f, 0x6c, 0x6f,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x04, 0x52, 0x0f, 0x73, 0x6f,
	0x6c, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x3e, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x05, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x22, 0xbe, 0x03, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x31, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x01, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x02, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x38, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x11, 0x73, 0x6f,
	0x6c, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x04, 0x52, 0x0f, 0x73, 0x6f, 0x6c, 0x6f, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a,
	0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x48, 0x05, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x05,
	0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x53, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x05,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6f, 0x6c, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x73, 0x6f, 0x6c, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x37, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0x78, 0x0a, 0x0a, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x42, 0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x65,
	0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x22, 0xaf, 0x01, 0x0a,
	0x10, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x4d, 0x61,
	0x70, 0x12, 0x44, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x4d, 0x61,
	0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x1a, 0x55, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x92,
	0x02, 0x0a, 0x11, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x4d, 0x61, 0x70, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x72, 0x61, 0x6e, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f,
	0x6c, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x3b, 0x70, 0x6f, 0x6f, 0x6c, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pool_miners_proto_rawDescOnce sync.Once
	file_pool_miners_proto_rawDescData = file_pool_miners_proto_rawDesc
)

func file_pool_miners_proto_rawDescGZIP() []byte {
	file_pool_miners_proto_rawDescOnce.Do(func() {
		file_pool_miners_proto_rawDescData = protoimpl.X.CompressGZIP(file_pool_miners_proto_rawDescData)
	})
	return file_pool_miners_proto_rawDescData
}

var file_pool_miners_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_pool_miners_proto_goTypes = []interface{}{
	(*MinerAddressRequest)(nil),           // 0: pool_miners.MinerAddressRequest
	(*MinerAddressesRequest)(nil),         // 1: pool_miners.MinerAddressesRequest
	(*ValidateAddressResponse)(nil),       // 2: pool_miners.ValidateAddressResponse
	(*MinersFilters)(nil),                 // 3: pool_miners.MinersFilters
	(*MinersSorts)(nil),                   // 4: pool_miners.MinersSorts
	(*GetMinersRequest)(nil),              // 5: pool_miners.GetMinersRequest
	(*Miner)(nil),                         // 6: pool_miners.Miner
	(*MinersList)(nil),                    // 7: pool_miners.MinersList
	(*MinerWorker)(nil),                   // 8: pool_miners.MinerWorker
	(*MinerWorkers)(nil),                  // 9: pool_miners.MinerWorkers
	(*MinersWorkersMap)(nil),              // 10: pool_miners.MinersWorkersMap
	nil,                                   // 11: pool_miners.MinersWorkersMap.WorkersEntry
	(*filters.BigIntRangeFilter)(nil),     // 12: filters.BigIntRangeFilter
	(*filters.UInt32Filter)(nil),          // 13: filters.UInt32Filter
	(*filters.DateTimeRangeFilter)(nil),   // 14: filters.DateTimeRangeFilter
	(*sorts.SortOrder)(nil),               // 15: sorts.SortOrder
	(*pagination.PaginationRequest)(nil),  // 16: pagination.PaginationRequest
	(*timestamppb.Timestamp)(nil),         // 17: google.protobuf.Timestamp
	(*pagination.PaginationResponse)(nil), // 18: pagination.PaginationResponse
}
var file_pool_miners_proto_depIdxs = []int32{
	12, // 0: pool_miners.MinersFilters.hashrate:type_name -> filters.BigIntRangeFilter
	13, // 1: pool_miners.MinersFilters.workers_count:type_name -> filters.UInt32Filter
	13, // 2: pool_miners.MinersFilters.blocks_count:type_name -> filters.UInt32Filter
	13, // 3: pool_miners.MinersFilters.solo_blocks_count:type_name -> filters.UInt32Filter
	14, // 4: pool_miners.MinersFilters.joined_at:type_name -> filters.DateTimeRangeFilter
	15, // 5: pool_miners.MinersSorts.address:type_name -> sorts.SortOrder
	15, // 6: pool_miners.MinersSorts.hashrate:type_name -> sorts.SortOrder
	15, // 7: pool_miners.MinersSorts.workers_count:type_name -> sorts.SortOrder
	15, // 8: pool_miners.MinersSorts.blocks_count:type_name -> sorts.SortOrder
	15, // 9: pool_miners.MinersSorts.solo_blocks_count:type_name -> sorts.SortOrder
	15, // 10: pool_miners.MinersSorts.joined_at:type_name -> sorts.SortOrder
	3,  // 11: pool_miners.GetMinersRequest.filters:type_name -> pool_miners.MinersFilters
	4,  // 12: pool_miners.GetMinersRequest.sorts:type_name -> pool_miners.MinersSorts
	16, // 13: pool_miners.GetMinersRequest.pagination:type_name -> pagination.PaginationRequest
	17, // 14: pool_miners.Miner.joined_at:type_name -> google.protobuf.Timestamp
	17, // 15: pool_miners.Miner.last_activity:type_name -> google.protobuf.Timestamp
	6,  // 16: pool_miners.MinersList.miners:type_name -> pool_miners.Miner
	18, // 17: pool_miners.MinersList.pagination:type_name -> pagination.PaginationResponse
	17, // 18: pool_miners.MinerWorker.connected_at:type_name -> google.protobuf.Timestamp
	8,  // 19: pool_miners.MinerWorkers.workers:type_name -> pool_miners.MinerWorker
	11, // 20: pool_miners.MinersWorkersMap.workers:type_name -> pool_miners.MinersWorkersMap.WorkersEntry
	9,  // 21: pool_miners.MinersWorkersMap.WorkersEntry.value:type_name -> pool_miners.MinerWorkers
	0,  // 22: pool_miners.PoolMinersService.ValidateAddress:input_type -> pool_miners.MinerAddressRequest
	5,  // 23: pool_miners.PoolMinersService.GetMiners:input_type -> pool_miners.GetMinersRequest
	1,  // 24: pool_miners.PoolMinersService.GetMinersWorkersFromList:input_type -> pool_miners.MinerAddressesRequest
	2,  // 25: pool_miners.PoolMinersService.ValidateAddress:output_type -> pool_miners.ValidateAddressResponse
	7,  // 26: pool_miners.PoolMinersService.GetMiners:output_type -> pool_miners.MinersList
	10, // 27: pool_miners.PoolMinersService.GetMinersWorkersFromList:output_type -> pool_miners.MinersWorkersMap
	25, // [25:28] is the sub-list for method output_type
	22, // [22:25] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_pool_miners_proto_init() }
func file_pool_miners_proto_init() {
	if File_pool_miners_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pool_miners_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersSorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Miner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerWorkers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pool_miners_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinersWorkersMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pool_miners_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_pool_miners_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pool_miners_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pool_miners_proto_goTypes,
		DependencyIndexes: file_pool_miners_proto_depIdxs,
		MessageInfos:      file_pool_miners_proto_msgTypes,
	}.Build()
	File_pool_miners_proto = out.File
	file_pool_miners_proto_rawDesc = nil
	file_pool_miners_proto_goTypes = nil
	file_pool_miners_proto_depIdxs = nil
}
