// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: charts.proto

package charts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChartPeriod int32

const (
	ChartPeriod_Hour  ChartPeriod = 0
	ChartPeriod_Day   ChartPeriod = 1
	ChartPeriod_Week  ChartPeriod = 2
	ChartPeriod_Month ChartPeriod = 3
)

// Enum value maps for ChartPeriod.
var (
	ChartPeriod_name = map[int32]string{
		0: "Hour",
		1: "Day",
		2: "Week",
		3: "Month",
	}
	ChartPeriod_value = map[string]int32{
		"Hour":  0,
		"Day":   1,
		"Week":  2,
		"Month": 3,
	}
)

func (x ChartPeriod) Enum() *ChartPeriod {
	p := new(ChartPeriod)
	*p = x
	return p
}

func (x ChartPeriod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChartPeriod) Descriptor() protoreflect.EnumDescriptor {
	return file_charts_proto_enumTypes[0].Descriptor()
}

func (ChartPeriod) Type() protoreflect.EnumType {
	return &file_charts_proto_enumTypes[0]
}

func (x ChartPeriod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChartPeriod.Descriptor instead.
func (ChartPeriod) EnumDescriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{0}
}

type GetPoolStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Period        ChartPeriod            `protobuf:"varint,1,opt,name=period,proto3,enum=charts.ChartPeriod" json:"period,omitempty"`
	Solo          bool                   `protobuf:"varint,2,opt,name=solo,proto3" json:"solo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoolStatsRequest) Reset() {
	*x = GetPoolStatsRequest{}
	mi := &file_charts_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoolStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolStatsRequest) ProtoMessage() {}

func (x *GetPoolStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolStatsRequest.ProtoReflect.Descriptor instead.
func (*GetPoolStatsRequest) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{0}
}

func (x *GetPoolStatsRequest) GetPeriod() ChartPeriod {
	if x != nil {
		return x.Period
	}
	return ChartPeriod_Hour
}

func (x *GetPoolStatsRequest) GetSolo() bool {
	if x != nil {
		return x.Solo
	}
	return false
}

type PoolStatsPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hashrate      []byte                 `protobuf:"bytes,1,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	AvgHashrate   []byte                 `protobuf:"bytes,2,opt,name=avg_hashrate,json=avgHashrate,proto3" json:"avg_hashrate,omitempty"`
	MinersCount   uint32                 `protobuf:"varint,3,opt,name=miners_count,json=minersCount,proto3" json:"miners_count,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolStatsPoint) Reset() {
	*x = PoolStatsPoint{}
	mi := &file_charts_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolStatsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolStatsPoint) ProtoMessage() {}

func (x *PoolStatsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolStatsPoint.ProtoReflect.Descriptor instead.
func (*PoolStatsPoint) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{1}
}

func (x *PoolStatsPoint) GetHashrate() []byte {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *PoolStatsPoint) GetAvgHashrate() []byte {
	if x != nil {
		return x.AvgHashrate
	}
	return nil
}

func (x *PoolStatsPoint) GetMinersCount() uint32 {
	if x != nil {
		return x.MinersCount
	}
	return 0
}

func (x *PoolStatsPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type PoolStatsPoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*PoolStatsPoint      `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PoolStatsPoints) Reset() {
	*x = PoolStatsPoints{}
	mi := &file_charts_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PoolStatsPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolStatsPoints) ProtoMessage() {}

func (x *PoolStatsPoints) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolStatsPoints.ProtoReflect.Descriptor instead.
func (*PoolStatsPoints) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{2}
}

func (x *PoolStatsPoints) GetPoints() []*PoolStatsPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type GetNetworkDifficultiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Period        ChartPeriod            `protobuf:"varint,1,opt,name=period,proto3,enum=charts.ChartPeriod" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkDifficultiesRequest) Reset() {
	*x = GetNetworkDifficultiesRequest{}
	mi := &file_charts_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkDifficultiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkDifficultiesRequest) ProtoMessage() {}

func (x *GetNetworkDifficultiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkDifficultiesRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkDifficultiesRequest) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{3}
}

func (x *GetNetworkDifficultiesRequest) GetPeriod() ChartPeriod {
	if x != nil {
		return x.Period
	}
	return ChartPeriod_Hour
}

type NetworkDifficultiesPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Difficulty    []byte                 `protobuf:"bytes,1,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	AvgDifficulty []byte                 `protobuf:"bytes,2,opt,name=avg_difficulty,json=avgDifficulty,proto3" json:"avg_difficulty,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDifficultiesPoint) Reset() {
	*x = NetworkDifficultiesPoint{}
	mi := &file_charts_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDifficultiesPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDifficultiesPoint) ProtoMessage() {}

func (x *NetworkDifficultiesPoint) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDifficultiesPoint.ProtoReflect.Descriptor instead.
func (*NetworkDifficultiesPoint) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkDifficultiesPoint) GetDifficulty() []byte {
	if x != nil {
		return x.Difficulty
	}
	return nil
}

func (x *NetworkDifficultiesPoint) GetAvgDifficulty() []byte {
	if x != nil {
		return x.AvgDifficulty
	}
	return nil
}

func (x *NetworkDifficultiesPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type NetworkDifficultiesPoints struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Points        []*NetworkDifficultiesPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkDifficultiesPoints) Reset() {
	*x = NetworkDifficultiesPoints{}
	mi := &file_charts_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkDifficultiesPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkDifficultiesPoints) ProtoMessage() {}

func (x *NetworkDifficultiesPoints) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkDifficultiesPoints.ProtoReflect.Descriptor instead.
func (*NetworkDifficultiesPoints) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkDifficultiesPoints) GetPoints() []*NetworkDifficultiesPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type GetRoundsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Period        ChartPeriod            `protobuf:"varint,1,opt,name=period,proto3,enum=charts.ChartPeriod" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoundsRequest) Reset() {
	*x = GetRoundsRequest{}
	mi := &file_charts_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundsRequest) ProtoMessage() {}

func (x *GetRoundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundsRequest.ProtoReflect.Descriptor instead.
func (*GetRoundsRequest) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoundsRequest) GetPeriod() ChartPeriod {
	if x != nil {
		return x.Period
	}
	return ChartPeriod_Hour
}

type RoundsPoint struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RoundsCount      uint32                 `protobuf:"varint,1,opt,name=rounds_count,json=roundsCount,proto3" json:"rounds_count,omitempty"`
	MinersCount      uint32                 `protobuf:"varint,2,opt,name=miners_count,json=minersCount,proto3" json:"miners_count,omitempty"`
	AvgRoundInterval float64                `protobuf:"fixed64,3,opt,name=avg_round_interval,json=avgRoundInterval,proto3" json:"avg_round_interval,omitempty"`
	Date             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RoundsPoint) Reset() {
	*x = RoundsPoint{}
	mi := &file_charts_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoundsPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundsPoint) ProtoMessage() {}

func (x *RoundsPoint) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundsPoint.ProtoReflect.Descriptor instead.
func (*RoundsPoint) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{7}
}

func (x *RoundsPoint) GetRoundsCount() uint32 {
	if x != nil {
		return x.RoundsCount
	}
	return 0
}

func (x *RoundsPoint) GetMinersCount() uint32 {
	if x != nil {
		return x.MinersCount
	}
	return 0
}

func (x *RoundsPoint) GetAvgRoundInterval() float64 {
	if x != nil {
		return x.AvgRoundInterval
	}
	return 0
}

func (x *RoundsPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type RoundsPoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*RoundsPoint         `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoundsPoints) Reset() {
	*x = RoundsPoints{}
	mi := &file_charts_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoundsPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundsPoints) ProtoMessage() {}

func (x *RoundsPoints) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundsPoints.ProtoReflect.Descriptor instead.
func (*RoundsPoints) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{8}
}

func (x *RoundsPoints) GetPoints() []*RoundsPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type GetMinerChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Miner         string                 `protobuf:"bytes,1,opt,name=miner,proto3" json:"miner,omitempty"`
	Solo          *bool                  `protobuf:"varint,2,opt,name=solo,proto3,oneof" json:"solo,omitempty"`
	Period        ChartPeriod            `protobuf:"varint,3,opt,name=period,proto3,enum=charts.ChartPeriod" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMinerChartRequest) Reset() {
	*x = GetMinerChartRequest{}
	mi := &file_charts_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMinerChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerChartRequest) ProtoMessage() {}

func (x *GetMinerChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerChartRequest.ProtoReflect.Descriptor instead.
func (*GetMinerChartRequest) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{9}
}

func (x *GetMinerChartRequest) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *GetMinerChartRequest) GetSolo() bool {
	if x != nil && x.Solo != nil {
		return *x.Solo
	}
	return false
}

func (x *GetMinerChartRequest) GetPeriod() ChartPeriod {
	if x != nil {
		return x.Period
	}
	return ChartPeriod_Hour
}

type MinerProfitabilityPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       uint64                 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinerProfitabilityPoint) Reset() {
	*x = MinerProfitabilityPoint{}
	mi := &file_charts_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerProfitabilityPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerProfitabilityPoint) ProtoMessage() {}

func (x *MinerProfitabilityPoint) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerProfitabilityPoint.ProtoReflect.Descriptor instead.
func (*MinerProfitabilityPoint) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{10}
}

func (x *MinerProfitabilityPoint) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *MinerProfitabilityPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type MinerProfitabilitiesPoints struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Points        []*MinerProfitabilityPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinerProfitabilitiesPoints) Reset() {
	*x = MinerProfitabilitiesPoints{}
	mi := &file_charts_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerProfitabilitiesPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerProfitabilitiesPoints) ProtoMessage() {}

func (x *MinerProfitabilitiesPoints) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerProfitabilitiesPoints.ProtoReflect.Descriptor instead.
func (*MinerProfitabilitiesPoints) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{11}
}

func (x *MinerProfitabilitiesPoints) GetPoints() []*MinerProfitabilityPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type MinerHashratesPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hashrate      []byte                 `protobuf:"bytes,1,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	AvgHashrate   []byte                 `protobuf:"bytes,2,opt,name=avg_hashrate,json=avgHashrate,proto3" json:"avg_hashrate,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinerHashratesPoint) Reset() {
	*x = MinerHashratesPoint{}
	mi := &file_charts_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerHashratesPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerHashratesPoint) ProtoMessage() {}

func (x *MinerHashratesPoint) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerHashratesPoint.ProtoReflect.Descriptor instead.
func (*MinerHashratesPoint) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{12}
}

func (x *MinerHashratesPoint) GetHashrate() []byte {
	if x != nil {
		return x.Hashrate
	}
	return nil
}

func (x *MinerHashratesPoint) GetAvgHashrate() []byte {
	if x != nil {
		return x.AvgHashrate
	}
	return nil
}

func (x *MinerHashratesPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type MinerHashratesPoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MinerHashratesPoint `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinerHashratesPoints) Reset() {
	*x = MinerHashratesPoints{}
	mi := &file_charts_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerHashratesPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerHashratesPoints) ProtoMessage() {}

func (x *MinerHashratesPoints) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerHashratesPoints.ProtoReflect.Descriptor instead.
func (*MinerHashratesPoints) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{13}
}

func (x *MinerHashratesPoints) GetPoints() []*MinerHashratesPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

type GetMinerWorkerChartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Miner         string                 `protobuf:"bytes,1,opt,name=miner,proto3" json:"miner,omitempty"`
	Worker        string                 `protobuf:"bytes,2,opt,name=worker,proto3" json:"worker,omitempty"`
	Period        ChartPeriod            `protobuf:"varint,3,opt,name=period,proto3,enum=charts.ChartPeriod" json:"period,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMinerWorkerChartRequest) Reset() {
	*x = GetMinerWorkerChartRequest{}
	mi := &file_charts_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMinerWorkerChartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerWorkerChartRequest) ProtoMessage() {}

func (x *GetMinerWorkerChartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerWorkerChartRequest.ProtoReflect.Descriptor instead.
func (*GetMinerWorkerChartRequest) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{14}
}

func (x *GetMinerWorkerChartRequest) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *GetMinerWorkerChartRequest) GetWorker() string {
	if x != nil {
		return x.Worker
	}
	return ""
}

func (x *GetMinerWorkerChartRequest) GetPeriod() ChartPeriod {
	if x != nil {
		return x.Period
	}
	return ChartPeriod_Hour
}

type MinerSharesPoint struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	AcceptedSharesCount   uint32                 `protobuf:"varint,1,opt,name=accepted_shares_count,json=acceptedSharesCount,proto3" json:"accepted_shares_count,omitempty"`
	RejectedSharesCount   uint32                 `protobuf:"varint,2,opt,name=rejected_shares_count,json=rejectedSharesCount,proto3" json:"rejected_shares_count,omitempty"`
	StaleSharesCount      uint32                 `protobuf:"varint,3,opt,name=stale_shares_count,json=staleSharesCount,proto3" json:"stale_shares_count,omitempty"`
	ValidBlockSharesCount uint32                 `protobuf:"varint,4,opt,name=valid_block_shares_count,json=validBlockSharesCount,proto3" json:"valid_block_shares_count,omitempty"`
	Date                  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MinerSharesPoint) Reset() {
	*x = MinerSharesPoint{}
	mi := &file_charts_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerSharesPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerSharesPoint) ProtoMessage() {}

func (x *MinerSharesPoint) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerSharesPoint.ProtoReflect.Descriptor instead.
func (*MinerSharesPoint) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{15}
}

func (x *MinerSharesPoint) GetAcceptedSharesCount() uint32 {
	if x != nil {
		return x.AcceptedSharesCount
	}
	return 0
}

func (x *MinerSharesPoint) GetRejectedSharesCount() uint32 {
	if x != nil {
		return x.RejectedSharesCount
	}
	return 0
}

func (x *MinerSharesPoint) GetStaleSharesCount() uint32 {
	if x != nil {
		return x.StaleSharesCount
	}
	return 0
}

func (x *MinerSharesPoint) GetValidBlockSharesCount() uint32 {
	if x != nil {
		return x.ValidBlockSharesCount
	}
	return 0
}

func (x *MinerSharesPoint) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type MinerSharesPoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Points        []*MinerSharesPoint    `protobuf:"bytes,1,rep,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinerSharesPoints) Reset() {
	*x = MinerSharesPoints{}
	mi := &file_charts_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinerSharesPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerSharesPoints) ProtoMessage() {}

func (x *MinerSharesPoints) ProtoReflect() protoreflect.Message {
	mi := &file_charts_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerSharesPoints.ProtoReflect.Descriptor instead.
func (*MinerSharesPoints) Descriptor() ([]byte, []int) {
	return file_charts_proto_rawDescGZIP(), []int{16}
}

func (x *MinerSharesPoints) GetPoints() []*MinerSharesPoint {
	if x != nil {
		return x.Points
	}
	return nil
}

var File_charts_proto protoreflect.FileDescriptor

const file_charts_proto_rawDesc = "" +
	"\n" +
	"\fcharts.proto\x12\x06charts\x1a\x1fgoogle/protobuf/timestamp.proto\"V\n" +
	"\x13GetPoolStatsRequest\x12+\n" +
	"\x06period\x18\x01 \x01(\x0e2\x13.charts.ChartPeriodR\x06period\x12\x12\n" +
	"\x04solo\x18\x02 \x01(\bR\x04solo\"\xa2\x01\n" +
	"\x0ePoolStatsPoint\x12\x1a\n" +
	"\bhashrate\x18\x01 \x01(\fR\bhashrate\x12!\n" +
	"\favg_hashrate\x18\x02 \x01(\fR\vavgHashrate\x12!\n" +
	"\fminers_count\x18\x03 \x01(\rR\vminersCount\x12.\n" +
	"\x04date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"A\n" +
	"\x0fPoolStatsPoints\x12.\n" +
	"\x06points\x18\x01 \x03(\v2\x16.charts.PoolStatsPointR\x06points\"L\n" +
	"\x1dGetNetworkDifficultiesRequest\x12+\n" +
	"\x06period\x18\x01 \x01(\x0e2\x13.charts.ChartPeriodR\x06period\"\x91\x01\n" +
	"\x18NetworkDifficultiesPoint\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x01 \x01(\fR\n" +
	"difficulty\x12%\n" +
	"\x0eavg_difficulty\x18\x02 \x01(\fR\ravgDifficulty\x12.\n" +
	"\x04date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"U\n" +
	"\x19NetworkDifficultiesPoints\x128\n" +
	"\x06points\x18\x01 \x03(\v2 .charts.NetworkDifficultiesPointR\x06points\"?\n" +
	"\x10GetRoundsRequest\x12+\n" +
	"\x06period\x18\x01 \x01(\x0e2\x13.charts.ChartPeriodR\x06period\"\xb1\x01\n" +
	"\vRoundsPoint\x12!\n" +
	"\frounds_count\x18\x01 \x01(\rR\vroundsCount\x12!\n" +
	"\fminers_count\x18\x02 \x01(\rR\vminersCount\x12,\n" +
	"\x12avg_round_interval\x18\x03 \x01(\x01R\x10avgRoundInterval\x12.\n" +
	"\x04date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\";\n" +
	"\fRoundsPoints\x12+\n" +
	"\x06points\x18\x01 \x03(\v2\x13.charts.RoundsPointR\x06points\"{\n" +
	"\x14GetMinerChartRequest\x12\x14\n" +
	"\x05miner\x18\x01 \x01(\tR\x05miner\x12\x17\n" +
	"\x04solo\x18\x02 \x01(\bH\x00R\x04solo\x88\x01\x01\x12+\n" +
	"\x06period\x18\x03 \x01(\x0e2\x13.charts.ChartPeriodR\x06periodB\a\n" +
	"\x05_solo\"c\n" +
	"\x17MinerProfitabilityPoint\x12\x18\n" +
	"\abalance\x18\x01 \x01(\x04R\abalance\x12.\n" +
	"\x04date\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"U\n" +
	"\x1aMinerProfitabilitiesPoints\x127\n" +
	"\x06points\x18\x01 \x03(\v2\x1f.charts.MinerProfitabilityPointR\x06points\"\x84\x01\n" +
	"\x13MinerHashratesPoint\x12\x1a\n" +
	"\bhashrate\x18\x01 \x01(\fR\bhashrate\x12!\n" +
	"\favg_hashrate\x18\x02 \x01(\fR\vavgHashrate\x12.\n" +
	"\x04date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"K\n" +
	"\x14MinerHashratesPoints\x123\n" +
	"\x06points\x18\x01 \x03(\v2\x1b.charts.MinerHashratesPointR\x06points\"w\n" +
	"\x1aGetMinerWorkerChartRequest\x12\x14\n" +
	"\x05miner\x18\x01 \x01(\tR\x05miner\x12\x16\n" +
	"\x06worker\x18\x02 \x01(\tR\x06worker\x12+\n" +
	"\x06period\x18\x03 \x01(\x0e2\x13.charts.ChartPeriodR\x06period\"\x91\x02\n" +
	"\x10MinerSharesPoint\x122\n" +
	"\x15accepted_shares_count\x18\x01 \x01(\rR\x13acceptedSharesCount\x122\n" +
	"\x15rejected_shares_count\x18\x02 \x01(\rR\x13rejectedSharesCount\x12,\n" +
	"\x12stale_shares_count\x18\x03 \x01(\rR\x10staleSharesCount\x127\n" +
	"\x18valid_block_shares_count\x18\x04 \x01(\rR\x15validBlockSharesCount\x12.\n" +
	"\x04date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04date\"E\n" +
	"\x11MinerSharesPoints\x120\n" +
	"\x06points\x18\x01 \x03(\v2\x18.charts.MinerSharesPointR\x06points*5\n" +
	"\vChartPeriod\x12\b\n" +
	"\x04Hour\x10\x00\x12\a\n" +
	"\x03Day\x10\x01\x12\b\n" +
	"\x04Week\x10\x02\x12\t\n" +
	"\x05Month\x10\x032\xa3\x05\n" +
	"\rChartsService\x12D\n" +
	"\fGetPoolStats\x12\x1b.charts.GetPoolStatsRequest\x1a\x17.charts.PoolStatsPoints\x12b\n" +
	"\x16GetNetworkDifficulties\x12%.charts.GetNetworkDifficultiesRequest\x1a!.charts.NetworkDifficultiesPoints\x12;\n" +
	"\tGetRounds\x12\x18.charts.GetRoundsRequest\x1a\x14.charts.RoundsPoints\x12[\n" +
	"\x17GetMinerProfitabilities\x12\x1c.charts.GetMinerChartRequest\x1a\".charts.MinerProfitabilitiesPoints\x12O\n" +
	"\x11GetMinerHashrates\x12\x1c.charts.GetMinerChartRequest\x1a\x1c.charts.MinerHashratesPoints\x12[\n" +
	"\x17GetMinerWorkerHashrates\x12\".charts.GetMinerWorkerChartRequest\x1a\x1c.charts.MinerHashratesPoints\x12I\n" +
	"\x0eGetMinerShares\x12\x1c.charts.GetMinerChartRequest\x1a\x19.charts.MinerSharesPoints\x12U\n" +
	"\x14GetMinerWorkerShares\x12\".charts.GetMinerWorkerChartRequest\x1a\x19.charts.MinerSharesPointsBCZAgithub.com/grandminingpool/pool-api-proto/generated/charts;chartsb\x06proto3"

var (
	file_charts_proto_rawDescOnce sync.Once
	file_charts_proto_rawDescData []byte
)

func file_charts_proto_rawDescGZIP() []byte {
	file_charts_proto_rawDescOnce.Do(func() {
		file_charts_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_charts_proto_rawDesc), len(file_charts_proto_rawDesc)))
	})
	return file_charts_proto_rawDescData
}

var file_charts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_charts_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_charts_proto_goTypes = []any{
	(ChartPeriod)(0),                      // 0: charts.ChartPeriod
	(*GetPoolStatsRequest)(nil),           // 1: charts.GetPoolStatsRequest
	(*PoolStatsPoint)(nil),                // 2: charts.PoolStatsPoint
	(*PoolStatsPoints)(nil),               // 3: charts.PoolStatsPoints
	(*GetNetworkDifficultiesRequest)(nil), // 4: charts.GetNetworkDifficultiesRequest
	(*NetworkDifficultiesPoint)(nil),      // 5: charts.NetworkDifficultiesPoint
	(*NetworkDifficultiesPoints)(nil),     // 6: charts.NetworkDifficultiesPoints
	(*GetRoundsRequest)(nil),              // 7: charts.GetRoundsRequest
	(*RoundsPoint)(nil),                   // 8: charts.RoundsPoint
	(*RoundsPoints)(nil),                  // 9: charts.RoundsPoints
	(*GetMinerChartRequest)(nil),          // 10: charts.GetMinerChartRequest
	(*MinerProfitabilityPoint)(nil),       // 11: charts.MinerProfitabilityPoint
	(*MinerProfitabilitiesPoints)(nil),    // 12: charts.MinerProfitabilitiesPoints
	(*MinerHashratesPoint)(nil),           // 13: charts.MinerHashratesPoint
	(*MinerHashratesPoints)(nil),          // 14: charts.MinerHashratesPoints
	(*GetMinerWorkerChartRequest)(nil),    // 15: charts.GetMinerWorkerChartRequest
	(*MinerSharesPoint)(nil),              // 16: charts.MinerSharesPoint
	(*MinerSharesPoints)(nil),             // 17: charts.MinerSharesPoints
	(*timestamppb.Timestamp)(nil),         // 18: google.protobuf.Timestamp
}
var file_charts_proto_depIdxs = []int32{
	0,  // 0: charts.GetPoolStatsRequest.period:type_name -> charts.ChartPeriod
	18, // 1: charts.PoolStatsPoint.date:type_name -> google.protobuf.Timestamp
	2,  // 2: charts.PoolStatsPoints.points:type_name -> charts.PoolStatsPoint
	0,  // 3: charts.GetNetworkDifficultiesRequest.period:type_name -> charts.ChartPeriod
	18, // 4: charts.NetworkDifficultiesPoint.date:type_name -> google.protobuf.Timestamp
	5,  // 5: charts.NetworkDifficultiesPoints.points:type_name -> charts.NetworkDifficultiesPoint
	0,  // 6: charts.GetRoundsRequest.period:type_name -> charts.ChartPeriod
	18, // 7: charts.RoundsPoint.date:type_name -> google.protobuf.Timestamp
	8,  // 8: charts.RoundsPoints.points:type_name -> charts.RoundsPoint
	0,  // 9: charts.GetMinerChartRequest.period:type_name -> charts.ChartPeriod
	18, // 10: charts.MinerProfitabilityPoint.date:type_name -> google.protobuf.Timestamp
	11, // 11: charts.MinerProfitabilitiesPoints.points:type_name -> charts.MinerProfitabilityPoint
	18, // 12: charts.MinerHashratesPoint.date:type_name -> google.protobuf.Timestamp
	13, // 13: charts.MinerHashratesPoints.points:type_name -> charts.MinerHashratesPoint
	0,  // 14: charts.GetMinerWorkerChartRequest.period:type_name -> charts.ChartPeriod
	18, // 15: charts.MinerSharesPoint.date:type_name -> google.protobuf.Timestamp
	16, // 16: charts.MinerSharesPoints.points:type_name -> charts.MinerSharesPoint
	1,  // 17: charts.ChartsService.GetPoolStats:input_type -> charts.GetPoolStatsRequest
	4,  // 18: charts.ChartsService.GetNetworkDifficulties:input_type -> charts.GetNetworkDifficultiesRequest
	7,  // 19: charts.ChartsService.GetRounds:input_type -> charts.GetRoundsRequest
	10, // 20: charts.ChartsService.GetMinerProfitabilities:input_type -> charts.GetMinerChartRequest
	10, // 21: charts.ChartsService.GetMinerHashrates:input_type -> charts.GetMinerChartRequest
	15, // 22: charts.ChartsService.GetMinerWorkerHashrates:input_type -> charts.GetMinerWorkerChartRequest
	10, // 23: charts.ChartsService.GetMinerShares:input_type -> charts.GetMinerChartRequest
	15, // 24: charts.ChartsService.GetMinerWorkerShares:input_type -> charts.GetMinerWorkerChartRequest
	3,  // 25: charts.ChartsService.GetPoolStats:output_type -> charts.PoolStatsPoints
	6,  // 26: charts.ChartsService.GetNetworkDifficulties:output_type -> charts.NetworkDifficultiesPoints
	9,  // 27: charts.ChartsService.GetRounds:output_type -> charts.RoundsPoints
	12, // 28: charts.ChartsService.GetMinerProfitabilities:output_type -> charts.MinerProfitabilitiesPoints
	14, // 29: charts.ChartsService.GetMinerHashrates:output_type -> charts.MinerHashratesPoints
	14, // 30: charts.ChartsService.GetMinerWorkerHashrates:output_type -> charts.MinerHashratesPoints
	17, // 31: charts.ChartsService.GetMinerShares:output_type -> charts.MinerSharesPoints
	17, // 32: charts.ChartsService.GetMinerWorkerShares:output_type -> charts.MinerSharesPoints
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_charts_proto_init() }
func file_charts_proto_init() {
	if File_charts_proto != nil {
		return
	}
	file_charts_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_charts_proto_rawDesc), len(file_charts_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_charts_proto_goTypes,
		DependencyIndexes: file_charts_proto_depIdxs,
		EnumInfos:         file_charts_proto_enumTypes,
		MessageInfos:      file_charts_proto_msgTypes,
	}.Build()
	File_charts_proto = out.File
	file_charts_proto_goTypes = nil
	file_charts_proto_depIdxs = nil
}
