// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: filters.proto

package filtersProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UInt32Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min *uint32 `protobuf:"varint,2,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max *uint32 `protobuf:"varint,3,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *UInt32Range) Reset() {
	*x = UInt32Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt32Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt32Range) ProtoMessage() {}

func (x *UInt32Range) ProtoReflect() protoreflect.Message {
	mi := &file_filters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt32Range.ProtoReflect.Descriptor instead.
func (*UInt32Range) Descriptor() ([]byte, []int) {
	return file_filters_proto_rawDescGZIP(), []int{0}
}

func (x *UInt32Range) GetMin() uint32 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *UInt32Range) GetMax() uint32 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type UInt32Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operators:
	//
	//	*UInt32Filter_Equals
	//	*UInt32Filter_Range
	Operators isUInt32Filter_Operators `protobuf_oneof:"operators"`
}

func (x *UInt32Filter) Reset() {
	*x = UInt32Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt32Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt32Filter) ProtoMessage() {}

func (x *UInt32Filter) ProtoReflect() protoreflect.Message {
	mi := &file_filters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt32Filter.ProtoReflect.Descriptor instead.
func (*UInt32Filter) Descriptor() ([]byte, []int) {
	return file_filters_proto_rawDescGZIP(), []int{1}
}

func (m *UInt32Filter) GetOperators() isUInt32Filter_Operators {
	if m != nil {
		return m.Operators
	}
	return nil
}

func (x *UInt32Filter) GetEquals() uint32 {
	if x, ok := x.GetOperators().(*UInt32Filter_Equals); ok {
		return x.Equals
	}
	return 0
}

func (x *UInt32Filter) GetRange() *UInt32Range {
	if x, ok := x.GetOperators().(*UInt32Filter_Range); ok {
		return x.Range
	}
	return nil
}

type isUInt32Filter_Operators interface {
	isUInt32Filter_Operators()
}

type UInt32Filter_Equals struct {
	Equals uint32 `protobuf:"varint,1,opt,name=equals,proto3,oneof"`
}

type UInt32Filter_Range struct {
	Range *UInt32Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*UInt32Filter_Equals) isUInt32Filter_Operators() {}

func (*UInt32Filter_Range) isUInt32Filter_Operators() {}

type UInt64RangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min *uint64 `protobuf:"varint,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max *uint64 `protobuf:"varint,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *UInt64RangeFilter) Reset() {
	*x = UInt64RangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt64RangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt64RangeFilter) ProtoMessage() {}

func (x *UInt64RangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_filters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt64RangeFilter.ProtoReflect.Descriptor instead.
func (*UInt64RangeFilter) Descriptor() ([]byte, []int) {
	return file_filters_proto_rawDescGZIP(), []int{2}
}

func (x *UInt64RangeFilter) GetMin() uint64 {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return 0
}

func (x *UInt64RangeFilter) GetMax() uint64 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

type UInt64Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Operators:
	//
	//	*UInt64Filter_Equals
	//	*UInt64Filter_Range
	Operators isUInt64Filter_Operators `protobuf_oneof:"operators"`
}

func (x *UInt64Filter) Reset() {
	*x = UInt64Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UInt64Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt64Filter) ProtoMessage() {}

func (x *UInt64Filter) ProtoReflect() protoreflect.Message {
	mi := &file_filters_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt64Filter.ProtoReflect.Descriptor instead.
func (*UInt64Filter) Descriptor() ([]byte, []int) {
	return file_filters_proto_rawDescGZIP(), []int{3}
}

func (m *UInt64Filter) GetOperators() isUInt64Filter_Operators {
	if m != nil {
		return m.Operators
	}
	return nil
}

func (x *UInt64Filter) GetEquals() uint32 {
	if x, ok := x.GetOperators().(*UInt64Filter_Equals); ok {
		return x.Equals
	}
	return 0
}

func (x *UInt64Filter) GetRange() *UInt64RangeFilter {
	if x, ok := x.GetOperators().(*UInt64Filter_Range); ok {
		return x.Range
	}
	return nil
}

type isUInt64Filter_Operators interface {
	isUInt64Filter_Operators()
}

type UInt64Filter_Equals struct {
	Equals uint32 `protobuf:"varint,1,opt,name=equals,proto3,oneof"`
}

type UInt64Filter_Range struct {
	Range *UInt64RangeFilter `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*UInt64Filter_Equals) isUInt64Filter_Operators() {}

func (*UInt64Filter_Range) isUInt64Filter_Operators() {}

type BigIntRangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min []byte `protobuf:"bytes,1,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Max []byte `protobuf:"bytes,2,opt,name=max,proto3,oneof" json:"max,omitempty"`
}

func (x *BigIntRangeFilter) Reset() {
	*x = BigIntRangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BigIntRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigIntRangeFilter) ProtoMessage() {}

func (x *BigIntRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_filters_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigIntRangeFilter.ProtoReflect.Descriptor instead.
func (*BigIntRangeFilter) Descriptor() ([]byte, []int) {
	return file_filters_proto_rawDescGZIP(), []int{4}
}

func (x *BigIntRangeFilter) GetMin() []byte {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *BigIntRangeFilter) GetMax() []byte {
	if x != nil {
		return x.Max
	}
	return nil
}

type DateTimeRangeFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3,oneof" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3,oneof" json:"end,omitempty"`
}

func (x *DateTimeRangeFilter) Reset() {
	*x = DateTimeRangeFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filters_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateTimeRangeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTimeRangeFilter) ProtoMessage() {}

func (x *DateTimeRangeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_filters_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTimeRangeFilter.ProtoReflect.Descriptor instead.
func (*DateTimeRangeFilter) Descriptor() ([]byte, []int) {
	return file_filters_proto_rawDescGZIP(), []int{5}
}

func (x *DateTimeRangeFilter) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *DateTimeRangeFilter) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_filters_proto protoreflect.FileDescriptor

var file_filters_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0b, 0x55, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0x63, 0x0a, 0x0c, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73,
	0x12, 0x2c, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x55,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x15, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x03, 0x6d, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0x69,
	0x0a, 0x0c, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x06, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x42, 0x69, 0x67,
	0x49, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x6d,
	0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x22, 0x91, 0x01, 0x0a,
	0x13, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x6e, 0x64,
	0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x72, 0x61, 0x6e, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x70,
	0x6f, 0x6f, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x3b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filters_proto_rawDescOnce sync.Once
	file_filters_proto_rawDescData = file_filters_proto_rawDesc
)

func file_filters_proto_rawDescGZIP() []byte {
	file_filters_proto_rawDescOnce.Do(func() {
		file_filters_proto_rawDescData = protoimpl.X.CompressGZIP(file_filters_proto_rawDescData)
	})
	return file_filters_proto_rawDescData
}

var file_filters_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_filters_proto_goTypes = []interface{}{
	(*UInt32Range)(nil),           // 0: filters.UInt32Range
	(*UInt32Filter)(nil),          // 1: filters.UInt32Filter
	(*UInt64RangeFilter)(nil),     // 2: filters.UInt64RangeFilter
	(*UInt64Filter)(nil),          // 3: filters.UInt64Filter
	(*BigIntRangeFilter)(nil),     // 4: filters.BigIntRangeFilter
	(*DateTimeRangeFilter)(nil),   // 5: filters.DateTimeRangeFilter
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_filters_proto_depIdxs = []int32{
	0, // 0: filters.UInt32Filter.range:type_name -> filters.UInt32Range
	2, // 1: filters.UInt64Filter.range:type_name -> filters.UInt64RangeFilter
	6, // 2: filters.DateTimeRangeFilter.start:type_name -> google.protobuf.Timestamp
	6, // 3: filters.DateTimeRangeFilter.end:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_filters_proto_init() }
func file_filters_proto_init() {
	if File_filters_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt32Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt32Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt64RangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UInt64Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BigIntRangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filters_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateTimeRangeFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_filters_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_filters_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*UInt32Filter_Equals)(nil),
		(*UInt32Filter_Range)(nil),
	}
	file_filters_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_filters_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UInt64Filter_Equals)(nil),
		(*UInt64Filter_Range)(nil),
	}
	file_filters_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_filters_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_filters_proto_goTypes,
		DependencyIndexes: file_filters_proto_depIdxs,
		MessageInfos:      file_filters_proto_msgTypes,
	}.Build()
	File_filters_proto = out.File
	file_filters_proto_rawDesc = nil
	file_filters_proto_goTypes = nil
	file_filters_proto_depIdxs = nil
}
