syntax = "proto3";

package pool;

option go_package = "github.com/grandminingpool/pool-api-proto/generated/pool;poolProto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

enum PayoutMode {
    PPLNS = 0;
    PROP = 1;
}

message PayoutsInfo {
    int32 interval = 1;
    optional uint64 min_payout = 2;
    optional uint64 max_payout = 3;
}

message PoolFee {
    double fee = 1;
    optional double solo_fee = 2;
}

message PoolSlave {
    string region = 1;
    string host = 2;
    int32 tcp_port = 3;
    int32 ssl_port = 4;
    optional int32 solo_port = 5;
    google.protobuf.Timestamp connected_at = 6;
}

message PoolInfo {
    string blockchain = 1;
    string host = 2;
    repeated string algos = 3;
    PayoutMode payout_mode = 4;
    bool solo = 5;
    PoolFee fee = 6;
    PayoutsInfo payouts_info = 7;
    repeated string agents = 8;
}

message PoolSlaves {
    repeated PoolSlave slaves = 1;
}

message PoolStats {
    int32 miners_count = 1;
    optional int32 solo_miners_count = 2;
    bytes hashrate = 3;
    bytes avg_hashrate = 4;
    optional bytes solo_hashrate = 5;
    optional bytes solo_avg_hashrate = 6;
    uint64 share_difficulty = 7;
    optional uint64 solo_share_difficulty = 8;
}

service PoolService {
    rpc GetPoolInfo(google.protobuf.Empty) returns (PoolInfo);
    rpc GetPoolSlaves(google.protobuf.Empty) returns (PoolSlaves);
    rpc GetPoolStats(google.protobuf.Empty) returns (PoolStats);
}